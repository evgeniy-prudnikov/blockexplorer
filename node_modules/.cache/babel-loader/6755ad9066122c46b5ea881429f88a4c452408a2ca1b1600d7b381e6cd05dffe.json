{"ast":null,"code":"var _jsxFileName = \"D:\\\\Alchemy\\\\blockexplorer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ethers = require(\"ethers\");\nconst apiKey = process.env.REACT_APP_ALCHEMY_API_KEY;\nconst url = `https://mainnet.infura.io/v3/${apiKey}`;\nconst provider = new ethers.JsonRpcProvider(url);\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\nconsole.log(provider.getBlockNumber());\nfunction App() {\n  _s();\n  const [blockNumber, setBlockNumber] = useState();\n  useEffect(() => {\n    async function getBlockNumber() {\n      const number = await provider.getBlockNumber();\n      setBlockNumber(prevState => number);\n    }\n    getBlockNumber();\n  }, []); // Empty dependency array to ensure useEffect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Block Number: \", blockNumber]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n}\n_s(App, \"VfaAUiarhMip/Sbk5/kYhqwl168=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","ethers","require","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","url","provider","JsonRpcProvider","console","log","getBlockNumber","App","_s","blockNumber","setBlockNumber","number","prevState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Alchemy/blockexplorer/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport './App.css';\r\n\r\nconst ethers = require(\"ethers\")\r\n\r\nconst apiKey = process.env.REACT_APP_ALCHEMY_API_KEY;\r\nconst url = `https://mainnet.infura.io/v3/${apiKey}`;\r\n\r\nconst provider = new ethers.JsonRpcProvider(url);\r\n\r\n// In this week's lessons we used ethers.js. Here we are using the\r\n// Alchemy SDK is an umbrella library with several different packages.\r\n//\r\n// You can read more about the packages here:\r\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\r\nconsole.log(provider.getBlockNumber())\r\nfunction App() {\r\n    const [blockNumber, setBlockNumber] = useState();\r\n\r\n    useEffect(() => {\r\n        async function getBlockNumber() {\r\n            const number = await provider.getBlockNumber();\r\n            setBlockNumber(prevState => number);\r\n        }\r\n\r\n        getBlockNumber();\r\n    }, []);  // Empty dependency array to ensure useEffect runs only once\r\n\r\n    return <div className=\"App\">Block Number: {blockNumber}</div>;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEhC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;AACpD,MAAMC,GAAG,GAAI,gCAA+BJ,MAAO,EAAC;AAEpD,MAAMK,QAAQ,GAAG,IAAIP,MAAM,CAACQ,eAAe,CAACF,GAAG,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACAG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,cAAc,CAAC,CAAC,CAAC;AACtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,eAAee,cAAcA,CAAA,EAAG;MAC5B,MAAMK,MAAM,GAAG,MAAMT,QAAQ,CAACI,cAAc,CAAC,CAAC;MAC9CI,cAAc,CAACE,SAAS,IAAID,MAAM,CAAC;IACvC;IAEAL,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBAAOZ,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,GAAC,gBAAc,EAACL,WAAW;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjE;AAACV,EAAA,CAbQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAeZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
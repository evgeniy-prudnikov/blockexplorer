{"ast":null,"code":"var _jsxFileName = \"D:\\\\Alchemy\\\\blockexplorer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\n// Refer to the README doc for more information about using API\n// keys in client-side code. You should never do this in production\n// level code.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET\n};\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\nconst alchemy = new Alchemy(settings);\nfunction App() {\n  _s();\n  const [blockNumber, setBlockNumber] = useState();\n  useEffect(() => {\n    async function getBlockNumber() {\n      setBlockNumber(await alchemy.core.getBlockNumber());\n    }\n    getBlockNumber();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Block Number: \", blockNumber]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"VfaAUiarhMip/Sbk5/kYhqwl168=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alchemy","Network","useEffect","useState","jsxDEV","_jsxDEV","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET","alchemy","App","_s","blockNumber","setBlockNumber","getBlockNumber","core","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Alchemy/blockexplorer/src/App.js"],"sourcesContent":["import { Alchemy, Network } from 'alchemy-sdk';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport './App.css';\r\n\r\n// Refer to the README doc for more information about using API\r\n// keys in client-side code. You should never do this in production\r\n// level code.\r\nconst settings = {\r\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\r\n  network: Network.ETH_MAINNET,\r\n};\r\n\r\n\r\n// In this week's lessons we used ethers.js. Here we are using the\r\n// Alchemy SDK is an umbrella library with several different packages.\r\n//\r\n// You can read more about the packages here:\r\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\r\nconst alchemy = new Alchemy(settings);\r\n\r\nfunction App() {\r\n  const [blockNumber, setBlockNumber] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getBlockNumber() {\r\n      setBlockNumber(await alchemy.core.getBlockNumber());\r\n    }\r\n\r\n    getBlockNumber();\r\n  });\r\n\r\n  return <div className=\"App\">Block Number: {blockNumber}</div>;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,aAAa;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,WAAW;;AAElB;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG;EACfC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAC7CC,OAAO,EAAEV,OAAO,CAACW;AACnB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAG,IAAIb,OAAO,CAACM,QAAQ,CAAC;AAErC,SAASQ,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,eAAegB,cAAcA,CAAA,EAAG;MAC9BD,cAAc,CAAC,MAAMJ,OAAO,CAACM,IAAI,CAACD,cAAc,CAAC,CAAC,CAAC;IACrD;IAEAA,cAAc,CAAC,CAAC;EAClB,CAAC,CAAC;EAEF,oBAAOb,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,GAAC,gBAAc,EAACL,WAAW;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC/D;AAACV,EAAA,CAZQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
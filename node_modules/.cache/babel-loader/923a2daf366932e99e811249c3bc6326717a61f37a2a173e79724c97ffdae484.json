{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UndecodedEventLog = exports.EventLog = exports.ContractTransactionResponse = exports.ContractTransactionReceipt = exports.ContractUnknownEventPayload = exports.ContractEventPayload = exports.ContractFactory = exports.Contract = exports.BaseContract = void 0;\n/**\n *  A **Contract** object is a meta-class (a class whose definition is\n *  defined at runtime), which communicates with a deployed smart contract\n *  on the blockchain and provides a simple JavaScript interface to call\n *  methods, send transaction, query historic logs and listen for its events.\n *\n *  @_section: api/contract:Contracts  [about-contracts]\n */\nvar contract_js_1 = require(\"./contract.js\");\nObject.defineProperty(exports, \"BaseContract\", {\n  enumerable: true,\n  get: function () {\n    return contract_js_1.BaseContract;\n  }\n});\nObject.defineProperty(exports, \"Contract\", {\n  enumerable: true,\n  get: function () {\n    return contract_js_1.Contract;\n  }\n});\nvar factory_js_1 = require(\"./factory.js\");\nObject.defineProperty(exports, \"ContractFactory\", {\n  enumerable: true,\n  get: function () {\n    return factory_js_1.ContractFactory;\n  }\n});\nvar wrappers_js_1 = require(\"./wrappers.js\");\nObject.defineProperty(exports, \"ContractEventPayload\", {\n  enumerable: true,\n  get: function () {\n    return wrappers_js_1.ContractEventPayload;\n  }\n});\nObject.defineProperty(exports, \"ContractUnknownEventPayload\", {\n  enumerable: true,\n  get: function () {\n    return wrappers_js_1.ContractUnknownEventPayload;\n  }\n});\nObject.defineProperty(exports, \"ContractTransactionReceipt\", {\n  enumerable: true,\n  get: function () {\n    return wrappers_js_1.ContractTransactionReceipt;\n  }\n});\nObject.defineProperty(exports, \"ContractTransactionResponse\", {\n  enumerable: true,\n  get: function () {\n    return wrappers_js_1.ContractTransactionResponse;\n  }\n});\nObject.defineProperty(exports, \"EventLog\", {\n  enumerable: true,\n  get: function () {\n    return wrappers_js_1.EventLog;\n  }\n});\nObject.defineProperty(exports, \"UndecodedEventLog\", {\n  enumerable: true,\n  get: function () {\n    return wrappers_js_1.UndecodedEventLog;\n  }\n});","map":{"version":3,"mappings":";;;;;;AAAA;;;;;;;;AAQA;AACIA;EAAAC;EAAAC;IAAA,iCAAY;EAAA;AAAA;AAAEF;EAAAC;EAAAC;IAAA,6BAAQ;EAAA;AAAA;AAG1B;AACIF;EAAAC;EAAAC;IAAA,mCAAe;EAAA;AAAA;AAGnB;AACIF;EAAAC;EAAAC;IAAA,yCAAoB;EAAA;AAAA;AAAEF;EAAAC;EAAAC;IAAA,gDAA2B;EAAA;AAAA;AACjDF;EAAAC;EAAAC;IAAA,+CAA0B;EAAA;AAAA;AAAEF;EAAAC;EAAAC;IAAA,gDAA2B;EAAA;AAAA;AACvDF;EAAAC;EAAAC;IAAA,6BAAQ;EAAA;AAAA;AAAEF;EAAAC;EAAAC;IAAA,sCAAiB;EAAA;AAAA","names":["Object","enumerable","get"],"sources":["D:\\Alchemy\\blockexplorer\\node_modules\\ethers\\src.ts\\contract\\index.ts"],"sourcesContent":["/**\n *  A **Contract** object is a meta-class (a class whose definition is\n *  defined at runtime), which communicates with a deployed smart contract\n *  on the blockchain and provides a simple JavaScript interface to call\n *  methods, send transaction, query historic logs and listen for its events.\n *\n *  @_section: api/contract:Contracts  [about-contracts]\n */\nexport {\n    BaseContract, Contract\n} from \"./contract.js\";\n\nexport {\n    ContractFactory\n} from \"./factory.js\";\n\nexport {\n    ContractEventPayload, ContractUnknownEventPayload,\n    ContractTransactionReceipt, ContractTransactionResponse,\n    EventLog, UndecodedEventLog\n} from \"./wrappers.js\";\n\nexport type {\n    BaseContractMethod, ConstantContractMethod,\n    PostfixOverrides,\n    ContractEvent, ContractEventArgs, ContractEventName,\n    ContractDeployTransaction,\n    ContractInterface, ContractMethod, ContractMethodArgs, ContractTransaction,\n    DeferredTopicFilter, Overrides,\n    WrappedFallback\n} from \"./types.js\";\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Alchemy\\\\blockexplorer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alchemyApiKey = process.env.REACT_APP_ALCHEMY_API_KEY;\nconst alchemyUrl = `https://eth-mainnet.g.alchemy.com/v2/${alchemyApiKey}`;\n\n// Create an ethers provider using the Infura URL\nconst provider = new ethers.providers.JsonRpcProvider(alchemyUrl);\nfunction App() {\n  _s();\n  const [blockNumber, setBlockNumber] = useState();\n  useEffect(() => {\n    async function getBlockNumber() {\n      const latestBlockNumber = await provider.getBlockNumber();\n      setBlockNumber(latestBlockNumber);\n    }\n    getBlockNumber();\n  }, [provider]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Block Number: \", blockNumber]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"VfaAUiarhMip/Sbk5/kYhqwl168=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","useEffect","useState","jsxDEV","_jsxDEV","alchemyApiKey","process","env","REACT_APP_ALCHEMY_API_KEY","alchemyUrl","provider","providers","JsonRpcProvider","App","_s","blockNumber","setBlockNumber","getBlockNumber","latestBlockNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Alchemy/blockexplorer/src/App.js"],"sourcesContent":["import { ethers } from 'ethers';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport './App.css';\r\n\r\nconst alchemyApiKey = process.env.REACT_APP_ALCHEMY_API_KEY;\r\nconst alchemyUrl = `https://eth-mainnet.g.alchemy.com/v2/${alchemyApiKey}`;\r\n\r\n// Create an ethers provider using the Infura URL\r\nconst provider = new ethers.providers.JsonRpcProvider(alchemyUrl);\r\n\r\nfunction App() {\r\n  const [blockNumber, setBlockNumber] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getBlockNumber() {\r\n      const latestBlockNumber = await provider.getBlockNumber();\r\n      setBlockNumber(latestBlockNumber);\r\n    }\r\n\r\n    getBlockNumber();\r\n  }, [provider]);\r\n\r\n  return <div className=\"App\">Block Number: {blockNumber}</div>;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,aAAa,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;AAC3D,MAAMC,UAAU,GAAI,wCAAuCJ,aAAc,EAAC;;AAE1E;AACA,MAAMK,QAAQ,GAAG,IAAIV,MAAM,CAACW,SAAS,CAACC,eAAe,CAACH,UAAU,CAAC;AAEjE,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,eAAegB,cAAcA,CAAA,EAAG;MAC9B,MAAMC,iBAAiB,GAAG,MAAMR,QAAQ,CAACO,cAAc,CAAC,CAAC;MACzDD,cAAc,CAACE,iBAAiB,CAAC;IACnC;IAEAD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,oBAAON,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,GAAC,gBAAc,EAACL,WAAW;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC/D;AAACV,EAAA,CAbQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAeZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}